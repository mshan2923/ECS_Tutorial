1 ~ 6 튜토리얼은 
https://mrbinggrae.tistory.com/category/Unity%20DOTS/ECS%20Sample%20Projtect
이걸보고 버전이 달라 생기는 문제 수정

7 ~  튜토리얼은
https://www.youtube.com/playlist?list=PLgYNYeZLALscmRpPW5UCy2K10L2HHj7aX
보고 진행

17,18은 안됨

Fluid Simulation은 https://medium.com/@leomontes_60748/how-to-implement-a-fluid-simulation-on-the-cpu-with-unity-ecs-job-system-bf90a0f2724f
                    https://github.com/leonardo-montes/Unity-ECS-Job-System-SPH
을 ECS 1.0 버전으로 바꿨지만... 잘안되서 (중력, 장애물 충돌이 없음)

-----
Fluid 은 Boids , Fluid Simulation 참고해서 재구성
    장애물은 나중에 구현하고 , 유닛간의 거리두기가 잘되어서 쌓이는지
    + 가상의 기본 바닥은 구현(높이 제한)
기존의 Collide 방식은 쌓여서 겹쳐지면 프레임 나락감 ==> 쏟아지는 형식이랑 너무 안맞음
충돌이벤트 있는 Collider랑 없는거랑 구별 필요. 이벤트를 리스트화 해야하니..

Collider는 {transform, (float3)Scale ,Shape} 으로 구성하면 되겠지? 일단 간단한 형태만 지원
 + (질량비례) 초당 감속률 , (질량 상대적 반비례) 충돌 감속률 , 속도 , 질량 


 >> 충돌은 같은 크기유닛간의 충돌 OR 장애물간의 충돌
지금은 바닥에 기본 장애물 하고 , 유닛간의 충돌을 하고 쌓이고 다량으로 겹칠때 프레임 

우선 유닛크기(정육면체로)로 영역을 나누고 헤쉬화해서 해쉬맵을 만듦 , 그럼  바로 겹치는지 알수있음
속력의 방향에 있는 영역에있는 유닛과의 거리로 충돌여부 판단
+ 서로 밀어내는힘도 정의 (질량 * A * 겹친거리의 비율)
장애물은 영역으로 나누었을때 속해있는 영역들을 해쉬화 하고 배열로 저장해둠 (일단 스태틱만) --> 영역해쉬 , 표면 노말
	기본바닥 , 범위제한은 선택해서 사용할수 있게 (미리 지정 + 빠른 계산)


>>> 헤쉬화 해서 빈공간이면 이동 / 있으면 거리 측정 , 바닥에 닿으면 중지 , 외력없이 중력만
	- 충돌 감쇠량이 100% 인것처럼 
		- 헤쉬맵 (해쉬값 , 인덱스) , cell인덱스 배열(유닛이 있는 영역의 첫번째 헤쉬맵 인덱스)
		- 위치배열, 속도 배열 / 크기 , 모양 은 (Collider를 , 대신 계속 바뀌는 속도 빼고)공유 컴포넌트
	Q : EntityQuery를 job내에 줄수...있나?
	Q : 엔티티를 job내 줄수 있다면 , 공유컴포넌트 접근은?
	Q : 위치한 헤쉬값을 공유컴포넌트로 하면 ..? 찾는건 빠를껀데... --> 그러면 해쉬맵 필요 X
	{위치 , 속도} [] / 해쉬맵(필요없을 지도? , 대신 공유컴포넌트로) /  
	
>> 우선 위치를 헤쉬화 해서 공유컴포넌트에 설정하고 , 테스트를 위해 임의의 태그 있는 오브젝트 가까이 가면 작아지게
>> Q: 생성과 제거가 많이 일어나면?